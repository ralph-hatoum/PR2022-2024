#################################################################
#    ANSIBLE PLAYBOOK - IPFS AND IPFSCLUSTER LAUNCHER           #
#                                                               #
# To start network : (will ask for ssh password)                #
# ansible-playbook playbook-u.yml -i hosts.ini --ask-pass       #
#################################################################                                                               


## We have to intialize bootstrap first as we need its IPFS id to register it as the network's bootstrap
- hosts: Bootstrap-node
  gather_facts: no
  tasks:
    - name: Initialize IPFS node
      shell: "ipfs init"
      ignore_errors: true
    ## COPYING SWARM KEY ## 
    - copy: 
        src : id_secret/swarm.key
        dest: ~/.ipfs/swarm.key

    - name: Retrieving Bootstrap's ID
      shell: "ipfs config show | grep \"PeerID\" "
      register: BootstrapID

    - name: Delete all bootstraps
      shell: "ipfs bootstrap rm --all"

    - name: Display outputs
      debug: var=BootstrapID.stdout_lines
    
    - name: Write output to local file
      copy:
        content: "{{ BootstrapID.stdout_lines }}"
        dest: id_secret/bootstrap_id.txt
      delegate_to: localhost
    
    - name: Format bootstrap ipfs ID
      shell: python3 bootstrap_parser.py {{hostvars[inventory_hostname]['label_ip']}}
      delegate_to: localhost
    
    - name: Start IPFS dameons
      shell: "ipfs daemon --enable-gc >/dev/null 2>&1 &"
    
    - name: Start prometheus node exporter
      shell: nohup python3 node_exporter.py {{ hostvars[inventory_hostname]['label'] }} >/dev/null 2>&1 &



- hosts: IPFS-nodes
  vars: 
    bootstrap_id: "{{lookup('file','id_secret/bootstrap_id.txt')}}"
  gather_facts: no
  tasks:
    - name: Initialize IPFS node
      shell: "ipfs init"
      ignore_errors: true

    ## COPYING SWARM KEY ## 
    - copy: 
        src : id_secret/swarm.key
        dest: ~/.ipfs/swarm.key

    - name: Delete all bootstraps
      shell: "ipfs bootstrap rm --all"

    - name: Add bootstrap node
      shell: "ipfs bootstrap add {{ bootstrap_id }}"

    - name: Start IPFS dameons
      shell: "nohup ipfs daemon --enable-gc >/dev/null 2>&1 &"

    - name: Start prometheus node exporter
      shell: nohup python3 node_exporter.py {{ hostvars[inventory_hostname]['label'] }} >/dev/null 2>&1 &


